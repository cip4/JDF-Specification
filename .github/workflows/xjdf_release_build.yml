# This is the basic workflow to build release documentation

# !NOTE:
# This build is specifically for Version 2 i.e. XJDF 
# It is triggered by a push of a tag that starts with '2', i.e. 2.2, or 2.14-IP3 etc
name: XJDF Release Build

## This section contains ALL variables specific for this project
 env:
  BUILD_NAME:       XJDF-SPECIFICATION
# Neither of the'BOTH' or 'JDF' versions are built for release
#
# 'XJDF' parameters
  #XJDF_DOCUMENT_VERSION:     '2.2' not required for release build. Uses Tag of build.
  XJDF_DOCUMENT_COVER_TITLE:  XJDF Specification
  XJDF_CONFIG_FILE:         Build\XJDF_Specification.ini
  XJDF_CONFLUENCE_LABELS:   'xjdf-specification,milestone'
# Same ID for all builds  
  CONFLUENCE_ID:        '1560313992'
  
  DOCUMENT_METADATA_COPYRIGHT:  'CIP4 Organization, all rights reserved'
  DOCUMENT_XJDF_METADATA_TITLE: 'XJDF Specification'
  DOCUMENT_XJDF_METADATA_SUBJECT: 'Exchange Job Definition Format for Print Automation'
  DOCUMENT_METADATA_AUTHOR:     'CIP4 Organization'
  DOCUMENT_METADATA_KEYWORDS:   'Automation;CIM;CIP4;Graphic Arts;Graphics;Interface;Printing;Specification;Standard;Workflow;XML'

  BUILD_UTILITY_EXE: c:\actions-runner\_work\_tool\document-processing\document-processing.exe   

## The remaining section is based upon those common to all draft documentation builds
## It has been modified to allow for three slightly different builds.

# Controls when the action will run - the tag must start with a '2'
on:
  push:
    tags:
      - '2*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_xjdf:
    runs-on: [framemaker-2020]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # For access to other Git repositories - an access token is required. 
      - name: Get GitHub Access Token
        id: access_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.CIP4_GITHUB_ACTIONS_APP_ID }}
          private_key: ${{ secrets.CIP4_GITHUB_ACTIONS_APP_KEY }} 
      
      # Clean up working directory
      - name: Clean up working directory
        run:  rm -r -fo *
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          path: document

      # Check out the build scripts
      - name: Checkout build scripts
        uses: actions/checkout@v2
        with:
          repository: cip4/cip4-document-builder
          token: ${{ steps.access_token.outputs.token }}
          path: builder

      - name: Build Document
        timeout-minutes: 45
        run: >
          python ..\builder\scripts\specbuilder.py $env:XJDF_CONFIG_FILE
          "$env:XJDF_DOCUMENT_COVER_TITLE $(${env:GITHUB_REF}.replace('refs/tags/',''))"
          "$env:XJDF_DOCUMENT_COVER_TITLE"
          "Release: $(${env:GITHUB_REF}.replace('refs/tags/',''))"
          "Run-$env:GITHUB_RUN_NUMBER"
        working-directory: ./document
        
     # Update document meta-data properties
      - name: Update Document Metadata
        run: >
          ${{ env.BUILD_UTILITY_EXE }} info "$env:XJDF_DOCUMENT_COVER_TITLE*.pdf"
          --copyright "$((Get-Date).ToString('MMMM yyyy')) $env:DOCUMENT_METADATA_COPYRIGHT"
          --title     "$env:DOCUMENT_XJDF_METADATA_TITLE $(${env:GITHUB_REF}.replace('refs/tags/',''))"
          --subject   "$env:DOCUMENT_XJDF_METADATA_SUBJECT"
          --author    "$env:DOCUMENT_METADATA_AUTHOR"
          --keywords  "$env:DOCUMENT_METADATA_KEYWORDS"
          --version   "$(${env:GITHUB_REF}.replace('refs/tags/',''))"
        working-directory: ./document/target

      # Upload any artefact produced.
      - name: Upload Document
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_NAME }}-artifact
          path: document/target/*.pdf

      # Generate full Confluence Labels List
      - name: Generate Full Confluence Labels List
        run: >
          echo "FULL_CONFLUENCE_LABELS=${env:XJDF_CONFLUENCE_LABELS},$(${env:GITHUB_REF}.replace('refs/tags/',''))" | 
          Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          
      # Upload to Confluence
      - name: Confluence Upload
        uses: cip4/action-confluence-upload@master
        with:
          url: 'https://cip4.atlassian.net/wiki'
          username: ${{ secrets.ATLASSIAN_USER }}
          password: ${{ secrets.ATLASSIAN_TOKEN }}
          contentId: ${{ env.CONFLUENCE_ID }}
          label:    ${{ env.FULL_CONFLUENCE_LABELS }}
          filePattern: 'document/target/*.pdf'
