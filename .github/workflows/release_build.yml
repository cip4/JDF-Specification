# This is the basic workflow to build the release versions of the JDF & XJDF Specifications

name: Release Build
# The VERSION is the main release number i.e. 1.8 or 2.1
env:      
  BUILD_NAME:       JDF-Specifications
  JDF_VERSION:      '1.8'
  XJDF_VERSION:     '2.2'
  JDF_FILE_NAME:    JDF Specification
  JDF_CONFIG_FILE:  JDF_Specification.ini
  XJDF_FILE_NAME:   XJDF Specification
  XJDF_CONFIG_FILE: XJDF_Specification.ini

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - '*'

  workflow_dispatch:
    inputs:
      tags:
        description: 'Manual Run'  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs

  build-jdf:
    # The type of runner that the job will run on
    runs-on: [self-hosted, framemaker-2015]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source
        uses: actions/checkout@v2

      # Get the date 
      - name: Get current time/date
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYYMMDD
        
      # Use the build tag as the document version
      - name: Get build tag
        run: echo "::set-env name=BUILD_TAG::$($env:GITHUB_REF.replace('refs/tags/', ''))"        

      # Uses the remote self-host to build the ICS
      - name: Build ICS-Base Specification
        env:
          NOW: "${{ steps.current-time.outputs.formattedTime }}"
          version:      ${{env.BUILD_TAG}}
          filename:     ${{env.JDF_FILE_NAME}} 
          configfile:   ${{env.JDF_CONFIG_FILE}}
        run: >
          python Build\specbuilder.py $env:configfile
          "$env:filename $env:version"
          "Release $env:version"
          "Run-$env:GITHUB_RUN_NUMBER"

      # Upload any artefact produced.
      - name: Upload ICS Specification artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_NAME }}-artifact
          path: target/*.pdf
          
  build-xjdf:
    # The type of runner that the job will run on
    runs-on: [self-hosted, framemaker-2015]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source
        uses: actions/checkout@v2

      # Get the date 
      - name: Get current time/date
        uses: srfrnk/current-time@master
        id: current-time
        with:
          format: YYYYMMDD
        
      # Use the build tag as the document version
      - name: Get build tag
        run: echo "::set-env name=BUILD_TAG::$($env:GITHUB_REF.replace('refs/tags/', ''))"
        
      # Uses the remote self-host to build the ICS
      - name: Build ICS-Base Specification
        env:
          NOW: "${{ steps.current-time.outputs.formattedTime }}"
          version:      ${{env.BUILD_TAG}}
          filename:     ${{env.XJDF_FILE_NAME}} 
          configfile:   ${{env.XJDF_CONFIG_FILE}}
        run: >
          python Build\specbuilder.py $env:configfile
          "$env:filename $env:version"
          "Release $env:version"
          "Run-$env:GITHUB_RUN_NUMBER"

      # Upload any artefact produced.
      - name: Upload ICS Specification artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BUILD_NAME }}-artifact
          path: target/*.pdf
          
